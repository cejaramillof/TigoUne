<?php/*Plugin Name: Tigotrainers User SecurityPlugin URI: http://www.tigotrainers.comDescription: Manage login and access for members.Version: 1.0Author: Juan Felipe Tobon GutierrezAuthor URI: http://www.tigotrainers.comLicense: GNU General Public License v2License URI: http://www.gnu.org/licenses/gpl-2.0.html*/if ( ! defined( 'ABSPATH' ) ) {	exit;}if ( ! class_exists( 'TGT_UserSecurity' ) ) {	final class TGT_UserSecurity {		private static $instance;		public static function get_instance() {			if ( ! isset( self::$instance ) && ! ( self::$instance instanceof TGT_UserSecurity ) ) {				self::$instance = new self;				self::$instance->hooks();			}			return self::$instance;		}		private function __construct() {			self::$instance = $this;		}		private function hooks() {			add_action( 'wp_authenticate', array( $this, 'user_login' ) );			//add_action( 'parse_request', array( $this, 'redirect' ) );		}		public function redirect() {			if ( ! is_user_logged_in() ) {				auth_redirect();				exit;			}		}		public static function install() {			self::create_user_tables();		}		public static function uninstall() {			self::delete_user_tables();		}		private static function create_user_tables() {			global $wpdb;			$table_dealers = $wpdb->prefix . "user_database";			$charset_collate = $wpdb->get_charset_collate();			$tables_exist = true;			if ( $tables_exist ) {				$sql = "CREATE TABLE $table_dealers (				  ID varchar(15) NOT NULL,				  dealer_name varchar(140) DEFAULT '' NOT NULL,				  UNIQUE KEY ID (ID)				) $charset_collate;";				require_once( ABSPATH . 'wp-admin/includes/upgrade.php' );				dbDelta( $sql );			}		}		private static function delete_user_tables() {			global $wpdb;			$table = $wpdb->prefix . "control_structure";			$sql = "DROP TABLE IF EXISTS $table;";			$wpdb->query( $sql );		}		public static function user_login( $username ) {			if ( username_exists( $username ) ) {				$userID = username_exists( $username );				if ( user_can( $userID, 'manage_options' ) ) {					return;				}				$referenced_user = self::user_is_in_references( $username );				if ( $referenced_user ) {					return;				} else {					auth_redirect();					exit;				}			} else {				$referenced_user = self::user_is_in_references( $username );				if ( $referenced_user ) {					$new_user = self::create_user( $username, $referenced_user );					return;				} else {					return;				}			}		}		private static function user_is_in_references( $username ) {			$user_type = false;			$user_type = self::search_user_reference( $username);			return $user_type;		}		private static function search_user_reference( $username ) {			global $wpdb;			$table_name = $wpdb->prefix . 'control_structure';			$query = "SELECT * FROM $table_name WHERE ID = %s";			$result = $wpdb->get_row( $wpdb->prepare( $query, $username ) );			if ( $result != null ) {				return true;			} else {				return false;			}		}		private static function create_user( $username, $reference ) {			$userdata = array(				'user_login' => $username,				'user_pass' => $username,				'display_name' => $username,			);			return wp_insert_user( $userdata );		}		private static function get_first_word( $string ) {			$arr = explode( ' ', trim( $string ) );			return $arr[0];		}	}}TGT_UserSecurity::get_instance();register_activation_hook( __FILE__, array( 'TGT_UserSecurity', 'install' ) );register_deactivation_hook( __FILE__, array( 'TGT_UserSecurity', 'uninstall' ) );